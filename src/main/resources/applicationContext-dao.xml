<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true">

  <bean class="org.springframework.orm.hibernate4.HibernateExceptionTranslator" />
  <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

  <!-- Hibernate SessionFactory -->
  <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" destroy-method="destroy">

    <property name="dataSource" ref="dataSource" />
    <property name="configLocation" value="classpath:hibernate.cfg.xml" />
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">${hibernate.dialect}</prop>
        <prop key="hibernate.hbm2ddl.auto">update</prop>
        <prop key="hibernate.query.substitutions">true 'Y', false 'N'</prop>
        <prop key="hibernate.cache.use_second_level_cache">true</prop>
        <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
        <!-- Hibernate Search index directory -->
        <prop key="hibernate.search.default.indexBase">${app.search.index.basedir}</prop>
      </props>
      <!-- Turn batching off for better error messages under PostgreSQL -->
      <!-- hibernate.jdbc.batch_size=0 -->
    </property>

  </bean>

  <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
  <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <!-- Activates scanning of @Autowired -->
  <context:annotation-config />

  <!--<context:spring-configured/>-->

  <!-- Activates scanning of @Repository -->
  <context:component-scan base-package="org.safehaus" />

  <!--<bean id="cassandraEntityManagerFactory"-->
  <!--class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">-->
  <!--<property name="persistenceUnitName" value="cassandra-pu" />-->
  <!--<property name="loadTimeWeaver">-->
  <!--<bean-->
  <!--class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />-->
  <!--</property>-->
  <!--</bean>-->

  <bean id="dataStore" class="org.safehaus.service.impl.DataStoreImpl"
        scope="singleton">
    <property name="dao" ref="daoService" />
  </bean>

  <bean id="jiraMetricService" class="org.safehaus.service.impl.JiraMetricServiceImpl"
        scope="singleton">
    <property name="dao" ref="daoService" />
  </bean>

  <bean id="stashMetricService" class="org.safehaus.service.impl.StashMetricServiceImpl"
        scope="singleton">
  </bean>

  <bean id="stashUserMetricService" class="org.safehaus.service.impl.StashUserMetricServiceImpl"
        scope="singleton">
    <property name="dao" ref="daoService" />
  </bean>

  <bean id="userMetricService" class="org.safehaus.service.impl.UserMetricServiceImpl"
        scope="singleton">
    <property name="dao" ref="daoService" />
  </bean>
        <!--<bean id="dao" class="org.safehaus.dao.kundera.DaoImpl"-->
  <!--scope="singleton">-->
  <!--</bean>-->

  <bean id="daoService" class="org.safehaus.dao.kundera.DaoServiceImpl"
        scope="singleton">
    <property name="emf" ref="emf-cassandra" />
  </bean>

  <bean id="emf-cassandra" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    <property name="persistenceUnitName" value="cassandra-pu" />
    <property name="jpaProperties">
      <props>
        <prop key="cql.version">3.0.0</prop>
      </props>
    </property>
    <property name="loadTimeWeaver">
      <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
    </property>
  </bean>

  <bean id="matchAllWithPropReq"
        class="org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource">
    <property name="transactionAttribute" value="PROPAGATION_REQUIRED" />
  </bean>

  <bean id="jndiTemplate" class="org.springframework.jndi.JndiTemplate"
        lazy-init="true">
    <property name="environment">
      <props>
        <prop key="java.naming.factory.initial">org.apache.naming.java.javaURLContextFactory</prop>
        <prop key="java.naming.factory.url.pkgs">org.apache.naming</prop>
      </props>
    </property>
  </bean>

</beans>
